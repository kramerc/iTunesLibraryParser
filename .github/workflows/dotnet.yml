# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: windows-2019
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
    - name: Setup NuGet.exe for use with actions
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@296fd3ccf8528660c91106efefe2364482f86d6f
      uses: NuGet/setup-nuget@v1.2.0
    - name: Restore dependencies
      run: nuget restore # dotnet restore does not fetch the dependencies with this legacy .NET Framework project
    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV
    - name: Build
      run: dotnet build --no-restore --configuration Release /p:Version=${VERSION}
    - name: Test
      run: dotnet test --no-build --verbosity normal --configuration Release /p:Version=${VERSION}
    - name: Pack
      run: nuget pack ITunesLibraryParser\ITunesLibraryParser.nuspec /p:Version=${VERSION}
    - name: Publish NuGet
      run: |
        dotnet nuget add source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --name github --username ${{ github.repository_owner }} --password ${{ secrets.GITHUB_TOKEN }} --store-password-in-clear-text
        dotnet nuget push ITunesLibraryParser.${VERSION}.nupkg --source github --api-key ${{ secrets.GITHUB_TOKEN }}
